import supabase from "./supabase";

async function getCabins() {
  const { data, error } = await supabase.from("the_oasis_cabins").select("*");
  if (error) throw error;
  return data;
}

async function deleteCabin(id) {
  const { data, error } = await supabase
    .from("the_oasis_cabins")
    .delete()
    .eq("id", id);
  if (error) {
    console.error(error);
    throw new Error("Could not delete the cabin");
  }

  return data;
}

async function createCabin(newCabin) {
  const url = import.meta.env.VITE_SUPABASE_URL;

  //NOTE: replaceAll is used because if there is a '/' between the image name uploaded from user it will create a sub folder in the supabase bucket and we don't want that

  const imageName = `${Math.random()}-${newCabin.image.name}`.replaceAll(
    "/",
    "",
  );
  console.log(imageName);
  const imagePath = `${url}/storage/v1/object/public/the_oasis_cabin_images/${imageName}`; //NOTE: this image path because bucket on supabase save image in this form of url

  const { error: uploadError } = await supabase.storage
    .from("the_oasis_cabin_images")
    .upload(imageName, newCabin.image); //NOTE: imageName  and image body , we only need imageName because imagePath will be generated by bucket
  if (uploadError) throw new Error("Could not upload image");

  const { data, error } = await supabase
    .from("the_oasis_cabins")
    .insert([{ ...newCabin, image: imagePath }]);
  if (error) throw new Error("Could not Add the Cabin");
  return data;
}

export { getCabins, deleteCabin, createCabin };
